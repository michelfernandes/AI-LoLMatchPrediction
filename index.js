const brain = require('brain.js');

const network = new brain.NeuralNetwork();

// 1 - Pain
// 2 - Flamengo
// 3 - INTZ
// 4 - Kabum
// 5 - PRG
// 6 - Vivo Keyd
// 7 - Santos
// 8 - Furia

network.train([
    // 1 - PAIN
    { input: [1, 5], output: [1] },
    { input: [1, 8], output: [0] },
    { input: [1, 4], output: [0] },
    { input: [1, 6], output: [1] },
    { input: [1, 3], output: [0] },
    { input: [1, 7], output: [1] },
    { input: [1, 2], output: [0] },
    { input: [1, 5], output: [1] },
    { input: [1, 8], output: [0] },
    { input: [1, 4], output: [1] },
    { input: [1, 6], output: [1] },
    { input: [1, 3], output: [0] },
    { input: [1, 7], output: [0] },
    { input: [1, 2], output: [0] },
    { input: [1, 5], output: [0] },
    { input: [1, 8], output: [0] },
    { input: [1, 4], output: [0] },
    { input: [1, 6], output: [0] },
    { input: [1, 3], output: [0] },
    { input: [1, 7], output: [1] },
    { input: [1, 2], output: [0] },

    // 2- Flamengo
    { input: [2, 7], output: [1] },
    { input: [2, 4], output: [0] },
    { input: [2, 6], output: [0] },
    { input: [2, 5], output: [0] },
    { input: [2, 8], output: [1] },
    { input: [2, 3], output: [1] },
    { input: [2, 1], output: [1] },
    { input: [2, 7], output: [0] },
    { input: [2, 4], output: [0] },
    { input: [2, 6], output: [0] },
    { input: [2, 5], output: [1] },
    { input: [2, 8], output: [1] },
    { input: [2, 3], output: [1] },
    { input: [2, 1], output: [1] },
    { input: [2, 7], output: [0] },
    { input: [2, 4], output: [0] },
    { input: [2, 6], output: [0] },
    { input: [2, 5], output: [0] },
    { input: [2, 8], output: [1] },
    { input: [2, 3], output: [1] },
    { input: [2, 1], output: [1] },

    // 3 - INTZ
    { input: [3, 4], output: [1] },
    { input: [3, 6], output: [0] },
    { input: [3, 5], output: [1] },
    { input: [3, 7], output: [0] },
    { input: [3, 1], output: [1] },
    { input: [3, 2], output: [0] },
    { input: [3, 8], output: [0] },
    { input: [3, 4], output: [0] },
    { input: [3, 6], output: [1] },
    { input: [3, 5], output: [1] },
    { input: [3, 7], output: [0] },
    { input: [3, 1], output: [1] },
    { input: [3, 2], output: [0] },
    { input: [3, 8], output: [0] },
    { input: [3, 4], output: [0] },
    { input: [3, 6], output: [1] },
    { input: [3, 5], output: [0] },
    { input: [3, 7], output: [1] },
    { input: [3, 1], output: [1] },
    { input: [3, 2], output: [0] },
    { input: [3, 8], output: [0] },

    // 4 - Kabum
    { input: [4, 3], output: [0] },
    { input: [4, 2], output: [1] },
    { input: [4, 1], output: [1] },
    { input: [4, 8], output: [0] },
    { input: [4, 7], output: [0] },
    { input: [4, 6], output: [0] },
    { input: [4, 5], output: [0] },
    { input: [4, 3], output: [1] },
    { input: [4, 2], output: [1] },
    { input: [4, 1], output: [0] },
    { input: [4, 8], output: [0] },
    { input: [4, 7], output: [1] },
    { input: [4, 6], output: [0] },
    { input: [4, 5], output: [0] },
    { input: [4, 3], output: [1] },
    { input: [4, 2], output: [1] },
    { input: [4, 1], output: [1] },
    { input: [4, 8], output: [0] },
    { input: [4, 7], output: [1] },
    { input: [4, 6], output: [0] },
    { input: [4, 5], output: [0] },

    // 5 - PRG
    { input: [5, 1], output: [0] },
    { input: [5, 7], output: [0] },
    { input: [5, 3], output: [0] },
    { input: [5, 2], output: [1] },
    { input: [5, 6], output: [1] },
    { input: [5, 8], output: [0] },
    { input: [5, 4], output: [1] },
    { input: [5, 1], output: [0] },
    { input: [5, 7], output: [0] },
    { input: [5, 3], output: [0] },
    { input: [5, 2], output: [0] },
    { input: [5, 6], output: [0] },
    { input: [5, 8], output: [0] },
    { input: [5, 4], output: [1] },
    { input: [5, 1], output: [1] },
    { input: [5, 7], output: [1] },
    { input: [5, 3], output: [1] },
    { input: [5, 2], output: [1] },
    { input: [5, 6], output: [1] },
    { input: [5, 8], output: [0] },
    { input: [5, 4], output: [1] },

    // 6 - Vivo Keyd
    { input: [6, 8], output: [1] },
    { input: [6, 3], output: [1] },
    { input: [6, 2], output: [1] },
    { input: [6, 1], output: [0] },
    { input: [6, 5], output: [0] },
    { input: [6, 4], output: [1] },
    { input: [6, 7], output: [1] },
    { input: [6, 8], output: [1] },
    { input: [6, 3], output: [0] },
    { input: [6, 2], output: [1] },
    { input: [6, 1], output: [0] },
    { input: [6, 5], output: [1] },
    { input: [6, 4], output: [1] },
    { input: [6, 7], output: [1] },
    { input: [6, 8], output: [1] },
    { input: [6, 3], output: [0] },
    { input: [6, 2], output: [1] },
    { input: [6, 1], output: [1] },
    { input: [6, 5], output: [0] },
    { input: [6, 4], output: [1] },
    { input: [6, 7], output: [1] },

    // 7 - Santos
    { input: [7, 2], output: [0] },
    { input: [7, 5], output: [1] },
    { input: [7, 8], output: [0] },
    { input: [7, 3], output: [1] },
    { input: [7, 4], output: [1] },
    { input: [7, 1], output: [0] },
    { input: [7, 6], output: [0] },
    { input: [7, 2], output: [1] },
    { input: [7, 5], output: [1] },
    { input: [7, 8], output: [1] },
    { input: [7, 3], output: [1] },
    { input: [7, 4], output: [0] },
    { input: [7, 1], output: [1] },
    { input: [7, 6], output: [0] },
    { input: [7, 2], output: [1] },
    { input: [7, 5], output: [0] },
    { input: [7, 8], output: [1] },
    { input: [7, 3], output: [0] },
    { input: [7, 4], output: [0] },
    { input: [7, 1], output: [0] },
    { input: [7, 6], output: [0] },

    // 8 - Furia
    { input: [8, 6], output: [0] },
    { input: [8, 1], output: [1] },
    { input: [8, 7], output: [1] },
    { input: [8, 4], output: [1] },
    { input: [8, 2], output: [0] },
    { input: [8, 5], output: [1] },
    { input: [8, 3], output: [1] },
    { input: [8, 6], output: [0] },
    { input: [8, 1], output: [1] },
    { input: [8, 7], output: [0] },
    { input: [8, 4], output: [1] },
    { input: [8, 2], output: [0] },
    { input: [8, 5], output: [1] },
    { input: [8, 3], output: [1] },
    { input: [8, 6], output: [0] },
    { input: [8, 1], output: [1] },
    { input: [8, 7], output: [0] },
    { input: [8, 4], output: [1] },
    { input: [8, 2], output: [0] },
    { input: [8, 5], output: [1] },
    { input: [8, 3], output: [1] },

    { input: [1, 5], output: [0] },
    { input: [1, 5], output: [0] },
    { input: [1, 5], output: [0] },
    { input: [1, 5], output: [0] },
    { input: [1, 5], output: [0] },
    { input: [1, 5], output: [0] },

]);

const output = network.run([1,5]);

console.log(`Prob: ${output}`);